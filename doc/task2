Напишите worker pool на основе каналов.

Одна горутина создает “задачи”, набор горутин выполняет эти “задачи”.

В качестве задачи выполните расчет md5 для переданной строки.

Worker pool — это такой шаблон проектирования, который позволяет ограничить количество одновременно работающих горутин. Это помогает контролировать степень параллелизма выполнения этих задач. Представьте, что каждая задача выполняет сетевой запрос в сторонний сервис. Создав worker pool на N горутин мы таким образом получим возможность контролировать нагрузку. Более N запросов одновременно не будет выполняться. Например, это позволит сглаживать всплески в кол-ве приходящих задач и не перегружать запросами внешнюю систему. Не путайте c rate limiter, там другие принципы расчета, хоть задачи и кажутся похожими.

Worker pool работает следующим образом:

Создание задач: Есть определённое количество задач, которые нужно выполнить. Например, каждая задача должна выполнить некоторый расчет и отправить дальше результат этого расчета в очередь.
Создание worker pool: Pool состоит из фиксированного количества горутин. Каждый worker будет брать задачи из очереди задач и выполнять их.
Очередь задач: Для задач создаётся канал, через который рабочие горутины будут получать задачи.
Запуск workers: Каждый worker запускается в отдельной горутине и начинает ожидать задачи из очереди.
Обработка задач: Worker берет задачи из очереди и обрабатывают их. После завершения задачи worker читает из канала следующую задачу.
Завершение работы: Когда все задачи выполнены и все workers завершили работу, worker pool закрывается. Этот шаг опциональный, т.к. worker pool может существовать все время жизни приложения.
